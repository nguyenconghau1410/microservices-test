version: '3.8'

services:
  config-server:
    image: racingboy560/config-server
    ports:
      - "8222:8222"
    networks:
      - config-network

  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_USER: thuytien
      POSTGRES_PASSWORD: conghau
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - db-network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - db-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - kafka-network

  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=thuytien
      - MONGO_INITDB_ROOT_PASSWORD=conghau
    networks:
      - db-network

  discovery:
    build: ./discovery
    depends_on:
      - config-server
    networks:
      - service-network

  gateway:
    build: ./gateway
    depends_on:
      - config-server
    networks:
      - service-network

  school:
    build: ./school
    depends_on:
      - config-server
      - kafka
      - postgresql
    networks:
      - service-network

  student:
    build: ./student
    depends_on:
      - config-server
      - postgresql
    networks:
      - service-network

  notifications:
    build: ./notifications
    depends_on:
      - kafka
      - mongodb
    networks:
      - service-network

networks:
  config-network:
  db-network:
  kafka-network:
  service-network:

volumes:
  postgres:
  pgadmin:
  mongo:
